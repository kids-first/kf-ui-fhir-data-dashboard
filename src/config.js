export const mobileWidth = 425;
export const tabletWidth = 768;

export const getBaseUrl = () => {
  let envVar = process.env.REACT_APP_FHIR_API;
  if (envVar) {
    if (envVar.substring(envVar.length - 1, envVar.length) !== '/') {
      envVar = envVar.concat('/');
    }
    return envVar;
  }
  return 'http://10.10.1.191:8000/';
};

const getDefaultFhirServers = () => {
  let servers = [
    {
      id: 0,
      name: 'HAPI',
      url: 'http://hapi.fhir.org/baseR4/',
      authRequired: false,
    },
    {
      id: 1,
      name: 'Kids First',
      url: 'http://10.10.1.191:8000/',
      authRequired: true,
    },
  ];
  if (getBaseUrl && servers.findIndex(x => x.url === getBaseUrl()) < 0) {
    servers.push({
      id: 2,
      name: getBaseUrl(),
      url: getBaseUrl(),
      authRequired: false,
    });
  }
  return servers;
};

export const defaultFhirServers = getDefaultFhirServers();

export const oAuthUrl = 'https://syntheticmass.mitre.org/oauth2/accesstoken';

export const shouldUseProxyUrl = url =>
  url.includes('hapi') || url.includes('synthea');

export const proxyUrl = 'https://damp-castle-44220.herokuapp.com/';
export const fhirUrl = 'http://hl7.org/fhir/StructureDefinition/';
export const defaultTableFields = ['id'];

export const acceptedResourceTypes = new Set([
  'Account',
  'ActivityDefinition',
  'AdverseEvent',
  'AllergyIntolerance',
  'Appointment',
  'AppointmentResponse',
  'AuditEvent',
  'Basic',
  'Binary',
  'BiologicallyDerivedProduct',
  'BodyStructure',
  'CapabilityStatement',
  'CarePlan',
  'CareTeam',
  'CatalogEntry',
  'ChargeItem',
  'ChargeItemDefinition',
  'Claim',
  'ClaimResponse',
  'ClinicalImpression',
  'CodeSystem',
  'Communication',
  'CommunicationRequest',
  'CompartmentDefinition',
  'Composition',
  'ConceptMap',
  'Condition',
  'Consent',
  'Contract',
  'Coverage',
  'CoverageEligibilityRequest',
  'CoverageEligibilityResponse',
  'DetectedIssue',
  'Device',
  'DeviceDefinition',
  'DeviceMetric',
  'DeviceRequest',
  'DeviceUseStatement',
  'DiagnosticReport',
  'DocumentManifest',
  'DocumentReference',
  'EffectEvidenceSynthesis',
  'Encounter',
  'Endpoint',
  'EnrollmentRequest',
  'EnrollmentResponse',
  'EpisodeOfCare',
  'EventDefinition',
  'Evidence',
  'EvidenceVariable',
  'ExampleScenario',
  'ExplanationOfBenefit',
  'FamilyMemberHistory',
  'Flag',
  'Goal',
  'GraphDefinition',
  'Group',
  'GuidanceResponse',
  'HealthcareService',
  'ImagingStudy',
  'Immunization',
  'ImmunizationEvaluation',
  'ImmunizationRecommendation',
  'ImplementationGuide',
  'InsurancePlan',
  'Invoice',
  'Library',
  'Linkage',
  'List',
  'Location',
  'Measure',
  'MeasureReport',
  'Media',
  'Medication',
  'MedicationAdministration',
  'MedicationDispense',
  'MedicationKnowledge',
  'MedicationRequest',
  'MedicationStatement',
  'MedicinalProduct',
  'MedicinalProductAuthorization',
  'MedicinalProductContraindication',
  'MedicinalProductIndication',
  'MedicinalProductIngredient',
  'MedicinalProductInteraction',
  'MedicinalProductManufactured',
  'MedicinalProductPackaged',
  'MedicinalProductPharmaceutical',
  'MedicinalProductUndesirableEffect',
  'MessageDefinition',
  'MessageHeader',
  'MolecularSequence',
  'NamingSystem',
  'NutritionOrder',
  'Observation',
  'ObservationDefinition',
  'OperationDefinition',
  'OperationOutcome',
  'Organization',
  'OrganizationAffiliation',
  'Parameters',
  'Patient',
  'PaymentNotice',
  'PaymentReconciliation',
  'Person',
  'PlanDefinition',
  'Practitioner',
  'PractitionerRole',
  'Procedure',
  'Provenance',
  'Questionnaire',
  'QuestionnaireResponse',
  'RelatedPerson',
  'RequestGroup',
  'ResearchDefinition',
  'ResearchElementDefinition',
  'ResearchStudy',
  'ResearchSubject',
  'RiskAssessment',
  'RiskEvidenceSynthesis',
  'Schedule',
  'SearchParameter',
  'ServiceRequest',
  'Slot',
  'Specimen',
  'SpecimenDefinition',
  'StructureDefinition',
  'StructureMap',
  'Subscription',
  'Substance',
  'SubstanceNucleicAcid',
  'SubstancePolymer',
  'SubstanceProtein',
  'SubstanceReferenceInformation',
  'SubstanceSourceMaterial',
  'SubstanceSpecification',
  'SupplyDelivery',
  'SupplyRequest',
  'Task',
  'TerminologyCapabilities',
  'TestReport',
  'TestScript',
  'ValueSet',
  'VerificationResult',
  'VisionPrescription',
]);

export const resourceCategories = {
  Foundation: {
    Conformance: new Set([
      'CapabilityStatement',
      'StructureDefinition',
      'ImplementationGuide',
      'SearchParameter',
      'MessageDefinition',
      'OperationDefinition',
      'CompartmentDefinition',
      'StructureMap',
      'GraphDefinition',
      'ExampleScenario',
    ]),
    Terminology: new Set([
      'CodeSystem',
      'ValueSet',
      'ConceptMap',
      'NamingSystem',
      'TerminologyCapabilities',
    ]),
    Security: new Set(['Provenance', 'AuditEvent', 'Consent']),
    Documents: new Set([
      'Composition',
      'DocumentManifest',
      'DocumentReference',
      'CatalogEntry',
    ]),
    Other: new Set([
      'Basic',
      'Binary',
      'Bundle',
      'Linkage',
      'MessageHeader',
      'OperationOutcome',
      'Parameters',
      'Subscription',
    ]),
  },
  Base: {
    Individuals: new Set([
      'Patient',
      'Practitioner',
      'PractitionerRole',
      'RelatedPerson',
      'Person',
      'Group',
    ]),
    'Entities 1': new Set([
      'Organization',
      'OrganizationAffiliation',
      'HealthcareService',
      'Endpoint',
      'Location',
    ]),
    'Entities 2': new Set([
      'Substance',
      'BiologicallyDerivedProduct',
      'Device',
      'DeviceMetric',
    ]),
    Workflow: new Set([
      'Task',
      'Appointment',
      'AppointmentResponse',
      'Schedule',
      'Slot',
      'VerificationResult',
    ]),
    Management: new Set([
      'Encounter',
      'EpisodeOfCare',
      'Flag',
      'List',
      'Library',
    ]),
  },
  Clinical: {
    Summary: new Set([
      'AllergyIntolerance',
      'AdverseEvent',
      'Condition',
      'Procedure',
      'FamilyMemberHistory',
      'ClinicalImpression',
      'DetectedIssue',
    ]),
    Diagnostics: new Set([
      'Observation',
      'Media',
      'DiagnosticReport',
      'Specimen',
      'BodyStructure',
      'ImagingStudy',
      'QuestionnaireResponse',
      'MolecularSequence',
    ]),
    Medications: new Set([
      'MedicationRequest',
      'MedicationAdministration',
      'MedicationDispense',
      'MedicationStatement',
      'Medication',
      'MedicationKnowledge',
      'Immunization',
      'ImmunizationEvaluation',
      'ImmunizationRecommendation',
    ]),
    'Care Provision': new Set([
      'CarePlan',
      'CareTeam',
      'Goal',
      'ServiceRequest',
      'NutritionOrder',
      'VisionPrescription',
      'RiskAssessment',
      'RequestGroup',
    ]),
    'Request & Response': new Set([
      'Communication',
      'CommunicationRequest',
      'DeviceRequest',
      'DeviceUseStatement',
      'GuidanceResponse',
      'SupplyRequest',
      'SupplyDelivery',
    ]),
  },
  Financial: {
    Support: new Set([
      'Coverage',
      'CoverageEligibilityRequest',
      'CoverageEligibilityResponse',
      'EnrollmentRequest',
      'EnrollmentResponse',
    ]),
    Billing: new Set(['Claim', 'ClaimResponse', 'Invoice']),
    Payment: new Set(['PaymentNotice', 'PaymentReconciliation']),
    General: new Set([
      'Account',
      'ChargeItem',
      'ChargeItemDefinition',
      'Contract',
      'ExplanationOfBenefit',
      'InsurancePlan',
    ]),
  },
  Specialized: {
    'Public Health & Research': new Set(['ResearchStudy', 'ResearchSubject']),
    'Definitional Artifacts': new Set([
      'ActivityDefinition',
      'DeviceDefinition',
      'EventDefinition',
      'ObservationDefinition',
      'PlanDefinition',
      'Questionnaire',
      'SpecimenDefinition',
    ]),
    'Evidence Based Medicine': new Set([
      'ResearchDefinition',
      'ResearchElementDefinition',
      'Evidence',
      'EvidenceVariable',
      'EffectEvidenceSynthesis',
      'RiskEvidenceSynthesis',
    ]),
    'Quality Reporting & Testing': new Set([
      'Measure',
      'MeasureReport',
      'TestScript',
      'TestReport',
    ]),
    'Medication Definition': new Set([
      'MedicinalProduct',
      'MedicinalProductAuthorization',
      'MedicinalProductContraindication',
      'MedicinalProductIndication',
      'MedicinalProductIngredient',
      'MedicinalProductInteraction',
      'MedicinalProductManufactured',
      'MedicinalProductPackaged',
      'MedicinalProductPharmaceutical',
      'MedicinalProductUndesirableEffect',
      'SubstanceNucleicAcid',
      'SubstancePolymer',
      'SubstanceProtein',
      'SubstanceReferenceInformation',
      'SubstanceSpecification',
      'SubstanceSourceMaterial',
    ]),
  },
};
